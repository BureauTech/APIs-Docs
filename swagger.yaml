swagger: "2.0"
info:
  description: "This is a server Cadastrol-Server.  You can find out more about     Cadastrol-Server at [Cadastrol-Server](https://github.com/BureauTech/Cadastrol-Server/tree/dev)."
  version: "1.0.0"
  title: "Bureau Tech Cadastrol-Server - API"
  termsOfService: ""
  contact:
    email: "bureautech@gmail.com"
  license:
    name: "MIT License"
    url: "https://github.com/BureauTech/Cadastrol-Server-API-Docs/blob/main/LICENSE"
host: "localhost:8080"
basePath: "/api/v1"
tags:
- name: "user"
  description: "Everything about Users"
schemes:
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user"
      operationId: "create"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
    get:
      tags:
      - "user"
      summary: "Return a list with 10 users per page"
      description: ""
      operationId: "getAll"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "page"
        type: integer
        required: true
        default: 0
        description: "The offset number to return users, limit 10 values"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SuccessResponse"
  /user/{id}:
    put:
      tags:
      - "user"
      summary: "Update user"
      description: "Update data to User"
      operationId: "update"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        type: integer
        required: true
        description: "The User identifier"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SuccessResponse"
    get:
      tags:
      - "user"
      summary: "Get a User by id"
      description: "Get a specify User by id"
      operationId: "getUserById"
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/SuccessResponse'
    delete:
      tags:
      - "user"
      summary: "Delete a User by id"
      description: "Delete a specify User by id"
      operationId: "deleteUserById"
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/SuccessResponse'

definitions:
  User:
    type: "object"
    properties:
      useEmail:
        type: "string"
      useCod:
        type: "integer"
      usePhone:
        type: "string"
      useIsAdmin:
        type: "boolean"
      useName:
        type: "string"
  SuccessResponse:
    type: "object"
    properties:
      statusCode:
        type: "integer"
        example: 200
      success:
        type: "boolean"
        example: true
      data:
        type: "object"
  ErrorResponse:
    type: "object"
    properties:
      statusCode:
        type: "integer"
      success:
        type: "boolean"
      error:
        type: "string"

externalDocs:
  description: "Find out more about Bureau Tech"
  url: "https://github.com/BureauTech/Cadastrol-Server-API-Docs/"